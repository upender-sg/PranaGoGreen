# Generated by Django 3.1.7 on 2021-03-26 11:23

from django.db import migrations, models
import django.utils.timezone
import usermanager.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='shippingaddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.PositiveIntegerField(blank=True, null=True)),
                ('flat', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='zipcodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zipcode', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('shipingPrice', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('fullname', models.CharField(error_messages={'unique': 'Please enter fullname'}, help_text='fullname is required', max_length=100)),
                ('lasttname', models.CharField(error_messages={'unique': 'Please enter firstname'}, help_text='first is required', max_length=100)),
                ('mobile', models.CharField(error_messages={'unique': 'Please enter mobile number'}, help_text='mobile number is required', max_length=50, unique=True)),
                ('email', models.CharField(blank=True, default='-- --', error_messages={'unique': 'Please enter email'}, help_text='email is required', max_length=50, null=True)),
                ('roleId', models.PositiveIntegerField(blank=True, null=True)),
                ('role_name', models.CharField(blank=True, max_length=50, null=True)),
                ('staff', models.BooleanField(default=True)),
                ('admin', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('is_hadmin', models.BooleanField(default=False, verbose_name='hadmin status')),
                ('is_sadmin', models.BooleanField(default=False, verbose_name='sadmin status')),
                ('show_pwd', models.CharField(blank=True, max_length=100, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_logout', models.DateTimeField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', usermanager.models.UserManager()),
            ],
        ),
    ]
